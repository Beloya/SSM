<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        	xmlns:cache="http://www.springframework.org/schema/cache"
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">      
   <!-- bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean-->
 <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
<property name="securityManager" ref="securityManager"/>
 <property name="loginUrl" value="/login" />
        <!--  property name="successUrl" value="jsp/suc.htm" /-->
        <property name="unauthorizedUrl" value="/jsp/erro.htm" />
        <property name="filterChainDefinitions">
            <value>

             /delCommit=perms[普通:评论:delete]  
               /Newarchives=perms[普通:文章:create]  
               /Createarchives=perms[普通:文章:create] 
           /deletearchives=perms[普通:文章:delete]
           /editarchives=perms[普通:文章:edit]
            /admin/** = authc
       /druid/**=perms[系统:监控:view]
      /druidWeb/**=perms[系统:监控:view]
            </value>
              </property>
</bean>

  <!-- Session ID 生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>
<!-- redis操作 -->
  <bean id="redisSessionService" class="com.MyBlog.Session.redisSessionService">
        <property name="expire" value="10800"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"></property>
    </bean> 
    <!-- Session管理器 -->
<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> 
        <!-- 会话超时时间，单位：毫秒  20m=1200000ms, 30m=1800000ms, 60m=3600000ms-->
        <property name="globalSessionTimeout" value="43200000"/>
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionFactory" ref="sessionFactory"/>
         <property name="sessionDAO" ref="redisSessionService"></property>
           <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdUrlRewritingEnabled" value="false" />
        <property name="sessionIdCookie" ref="sharesession"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionListeners">
            <list>
                <bean class="com.MyBlog.Session.ShiroSessionListener"/>
            </list>
        </property>
          <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
       
       
</bean>
<!-- 自定义Session工厂方法 返回会标识是否修改主要字段的自定义Session-->
    <bean id="sessionFactory" class="com.MyBlog.Session.ShiroSessionFactory"/>
    
     <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是 JSESSIONID -->
        <constructor-arg name="name" value="shrio_session"/>  
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
       
        <property name="path" value=""/>
 
        <property name="httpOnly" value="true"/>
    </bean> 
  <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
         <constructor-arg value="COOKIE_NAME" />
        <property name="httpOnly" value="true" />
        <property name="maxAge" value="604800" />
    </bean>
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
         <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
         <property name="cookie" ref="rememberMeCookie" />
     </bean>
      <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
         <property name="securityManager" ref="securityManager" />
     </bean>
      
      <!-- 配置进行授权和认证的 Realm -->  
        <bean id="myRealm" class="com.MyBlog.utils.ShiroDbRealm">   
             <property name="userService" ref="userService" />        
         </bean>  
         
         <bean id="userService" class="com.MyBlog.ServiceImpl.UserServiceImpl" />  
   
   <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
            <!--property name="cacheManager" ref="shiroEhcacheManager"/-->   
             <property name="realm" ref="myRealm"/>   
          
                <!--将session托管给redis进行管理，便于搭建集群系统-->
              <property name="sessionManager" ref="sessionManager"/>
              <property name="rememberMeManager" ref="rememberMeManager"/> 
       </bean>  
      <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
  
 

        </beans> 